package /def

import /capybara/type

def simple(): Int {
    a1 = 1
    b1 = 2
	return a1 + b1
}

def re_assigment(): Int {
    a2 = 1
    b2 = 2
    a2 = 3
   return a2 - b2
}

def union_re_assigment(): IntOrNothing {
    x: IntOrNothing = nothing
    x = 1
   return x
}

def simple_while(): Int {
	accumulator = 0
	i = 0
	while i < 10 {
		 accumulator = accumulator + 1
	}
	return accumulator
}

def for_loop_simple(): Int {
	accumulator = 0
	for i = 0 ; i < 10 ; i = i + 1 {
		accumulator = accumulator * accumulator
	}
	return accumulator
}

def for_loop_no_each_iteration(): Int {
	accumulator = 0
	for i = 0 ; i < 10 ; {
		accumulator = accumulator * accumulator
		i = i + 1
	}
	return accumulator
}

def for_loop_no_loop_expresion(): Int {
	accumulator = 0
	i = 0
	for ; i < 10 ; {
		accumulator = accumulator * accumulator
		i = i + 1
	}
	return accumulator
}

