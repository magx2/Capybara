package /if

import /capybara/type

fun simple_if(Int): String {
	return if(int > 0) {
		"Not Negative"
	} else {
		"Negative"
	}
}

fun simple_if_else_if(Int): String {
	return if(int > 0) {
		"Not Negative"
	} else if(int < 0) {
		"Negative"
	} else {
		"Zero"
	}
}

fun multiple_if_else(Int): String {
	return if(int <= 0) {
		"WRONG!"
	} else if(int == 1) {
		"A"
	} else if(int == 2) {
		"B"
	} else if(int == 3) {
		"C"
	} else {
		"Too hard..."
	}
}

fun assigment_in_simple_if(Int): String =
	if(int > 0) {
		msg = "Not "
		msg + " Negative"
	} else {
		msg = ", o really?"
		"Negative " + msg
	}

fun multiple_if_else_assignment(Int): String {
	letter = if(int <= 0) {
		prefix = "! "
		prefix + "WRONG!"
	} else if(int == 1) {
		prefix = "> "
		prefix + "A"
	} else if(int == 2) {
		prefix = "> "
		prefix + "B"
	} else if(int == 3) {
		prefix = "> "
		prefix + "C"
	} else {
		prefix = "? "
		prefix + "Too hard..."
	}
	return "Letter: " + letter
}

def main(List[String]) {
	assert simple_if(1) == "Not Negative"
	assert simple_if(-1) == "Negative"

	assert simple_if_else_if(1) == "Not Negative"
	assert simple_if_else_if(-1) == "Negative"
	assert simple_if_else_if(0) == "Zero"

	assert multiple_if_else(0) == "WRONG!"
	assert multiple_if_else(1) == "A"
	assert multiple_if_else(2) == "B"
	assert multiple_if_else(3) == "C"
	assert multiple_if_else(4) == "Too hard..."

	assert assigment_in_simple_if(1) == "Not Negative"
	assert assigment_in_simple_if(-1) == "Negative, o really?"

	assert multiple_if_else_assignment(0) == "Letter: ! WRONG!"
	assert multiple_if_else_assignment(1) == "Letter: > A"
	assert multiple_if_else_assignment(2) == "Letter: > B"
	assert multiple_if_else_assignment(3) == "Letter: > C"
	assert multiple_if_else_assignment(4) == "Letter: ? Too hard..."
}

