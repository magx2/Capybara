package /x/y/z

struct TestStruct {
	i: /a/b/c/Int
	f: Float
	...AnotherTestStruct
}

struct AnotherTestStruct {
	i_1: /a/b/c/Int
	f_2: Float
	...AnotherTestStruct2
}

struct AnotherTestStruct2 {
	foo: X
	boo: Y
}

fun xyz(i1: Int, i2: Int, i3: Int, i4: Int, f1: Float, f2: Float, f3: Float, f4: Float, Double): TestStruct {
	a1 = i1 * f1
	a2 = i2 ^ (f2 * 2)
	a3 = f(i3, f3, double)
	a4 = i4 - f4 > double ? 4 : i4 + 4
	a5 = i1 + i2 -> f53 -> f54
	a6 = 61 -> f62 -> f63
	a7 = 'abc 71 xyz' -> f72 -> f73
	a8 = true -> f72 -> f73
	return a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8
}

fun f(Int, Float, Double): Int {
	return int
}

fun f(Int): Int {
	return int == 0 ? 1 : int * f(int - 1)
}

fun f(Float): Float {
	return float
}

