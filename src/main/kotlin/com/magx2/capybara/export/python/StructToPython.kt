package com.magx2.capybara.export.python

import com.magx2.capybara.typeToString
import java.util.stream.Collectors
import kotlin.streams.toList


fun structToPython(struct: StructToExport): String {
    val constructorParameters = struct.fields
            .stream()
            .map { it.name }
            .collect(Collectors.joining(", "))

    val constructorAssigment = struct.fields
            .stream()
            .map { "self.${it.name} = ${it.name}" }
            .collect(Collectors.joining("\n|\t\t"))

    val attributes = struct.fields
            .stream()
            .map { "${it.name}: ${typeToString(it.type)}" }
            .collect(Collectors.joining("\n|\t"))

    val methodDoc = generateDocForDef(
            "__init__",
            struct.fields
                    .stream()
                    .map { Pair(it.name, it.type) }
                    .toList(),
            struct.type,
            2)

    val strFields = struct.fields
            .stream()
            .map { """${it.name} = " + str(self.${it.name}) + """" }
            .collect(Collectors.joining(", "))

    return """
    |class ${struct.type.name}:
    |${buildIndent(1)}${"\"\"\""}`
    |${buildIndent(1)}${struct.type.name}` class was generated by Capybara compiler
    |${buildIndent(1)}
    |${buildIndent(1)}Attributes:
    |${buildIndent(1)}-----------
    |${buildIndent(1)}$attributes
    |${buildIndent(1)}${"\"\"\""}
    |${buildIndent(1)}def __init__(self, $constructorParameters):
    |$methodDoc${buildIndent(2)}$constructorAssigment
    |
    |${buildIndent(1)}def __str__(self):
    |${buildIndent(2)}return "${struct.type.name} { $strFields }" 
    |${buildIndent(1)}""".trimMargin()
}