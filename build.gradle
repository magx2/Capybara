buildscript {
	ext.kotlin_version = '1.4.0'
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}
plugins {
	id 'antlr'
	id 'org.jetbrains.kotlin.jvm' version '1.4.0'
}
apply plugin: 'kotlin'

repositories {
	mavenCentral()
}

dependencies {
	antlr "org.antlr:antlr4:4.8-1"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
	compile group: 'org.slf4j', name: 'slf4j-simple', version: slf4j_version
	compile 'com.google.code.gson:gson:2.8.5'
	compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

	testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
	testCompile "org.junit.jupiter:junit-jupiter-params:$junit_version"
	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

tasks['compileKotlin'].dependsOn("generateGrammarSource")

test {
	useJUnitPlatform()
	testLogging {
		events "failed"
		exceptionFormat "full"
	}
}

jar {
	manifest {
		attributes(
				'Main-Class': 'com.magx2.capybara.CapybaraKt'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}